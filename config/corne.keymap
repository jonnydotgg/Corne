/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define AS(keycode) &as LS(keycode) keycode

/ {
    chosen {
      zmk,matrix_transform = &five_column_transform;
    };

    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;
            bindings = <&kp>, <&kp>;
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |   E   |  R  |  T  |     |  Y  |  U   |  I   |  O  |  P   |
// |  A  |  S  |   D   |  F  |  G  |     |  H  |  J   |  K   |  L  | BSPC |
// |  Z  |  X  |   C   |  V  |  B  |     |  N  |  M   |  ,   | .   | ESC  |
//             | LSHFT | LWR | SPC |     | ENT | RSE  | TAB  |
                        display-name = "Based";
                        bindings = <
   &kp Q &kp W &kp E       &kp R       &kp T       &kp Y   &kp U       &kp I      &kp O   &kp P
   &kp A &kp S &ht LALT D  &ht LCTRL F &kp G       &kp H   &ht LCTRL J &ht LALT K &kp L   &kp BSPC
   &kp Z &kp X &kp C       &kp V       &kp B       &kp N   &kp M       &kp COMMA  &kp DOT &kp ESC
               &kp LSHIFT  &mo 1       &kp SPACE   &kp RET &mo 2       &kp TAB
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// | F1    | F2    | F3     | F4   | F5    |     | F6   | F7   | F8    | F9  | F10  |
// | BTPRV | BTNXT | VOLDWN | MUTE | VOLUP |     | LFT  | DWN  |  UP   | RGT | F11  |
// | BTCLR | LWIN  |  PREV  | PLAY | NEXT  |     | HOME | PGDN | PGUP  | END | F12  |
//                 | LSHFT  |      |  SPC  |     | ENT  | COPY | PASTE |
                        display-name = "Nav";
                        bindings = <
   &kp F1      &kp F2      &kp F3        &kp F4     &kp F5           &kp F6    &kp F7     &kp F8       &kp F9    &kp F10
   &bt BT_PRV  &bt BT_NXT  &kp C_VOL_DN  &kp C_MUTE &kp C_VOL_UP     &kp LEFT  &kp DOWN   &kp UP       &kp RIGHT &kp F11
   &bt BT_CLR  &kp LWIN    &kp C_PREV    &kp C_PP   &kp C_NEXT       &kp HOME  &kp PG_DN  &kp PG_UP    &kp END   &kp F12
                           &kp LSHIFT    &trans     &kp SPACE        &kp RET   &kp K_COPY &kp K_PASTE
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | 1! |  2@ |  3#   |  4$ |  5% |     |  6^ |  7& |  8* |  9(  |  0)  |
// | -_ |  =+ |  {    |  (  |  [  |     |  ]  |  )  |  }  |  /?  |  \|  |
// | `~ |  ~  |   !   |  ,< |  :  |     |  ;  |  .> |  #  |  |   |  '   |
//            | LSHFT | DEL | SPC |     | ENT |     | TAB |
                        display-name = "123)]}.";
                        bindings = <

   &kp N1    &kp N2    &kp N3     &kp N4    &kp N5        &kp N6    &kp N7    &kp N8    &kp N9   &kp N0
   &kp MINUS &kp EQUAL &kp LBRC   &kp LPAR  &kp LBKT      &kp RBKT  &kp RPAR  &kp RBRC  &kp FSLH &kp NUBS
   &kp GRAVE &kp TILDE &kp EXCL   &kp COMMA &kp COLON     &kp SEMI  &kp DOT   &kp NUHS  &kp PIPE &kp APOS
                       &kp LSHIFT &kp DEL   &kp SPACE     &kp RET   &trans    &kp TAB
                        >;
                };
        };
};
